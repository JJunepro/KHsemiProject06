-- 테이블 생성
-- 회원정보 TABLE
CREATE TABLE MEMBER(
    M_ID VARCHAR2(30) PRIMARY Key NOT NULL,
    M_PW VARCHAR2(30) NOT NULL,
    M_AUTH CHAR(3) NOT NULL,
    M_NAME VARCHAR2(30) NOT NULL,
    M_NICK VARCHAR2(30) UNIQUE NOT NULL,
    M_BIRTH DATE NOT NULL,
    M_GENDER VARCHAR2(30) NOT NULL,
    M_PHONE VARCHAR2(60) UNIQUE NOT NULL,
    M_EMAIL VARCHAR2(60) UNIQUE NOT NULL,
    M_ADDRESS VARCHAR2(500) NOT NULL,
    M_ADDRESS_DETAIL VARCHAR2(500) NOT NULL,
    M_DEGREE NUMBER NOT NULL,
    M_CREATEDATE DATE NOT NULL,
    M_DELETEDATE DATE NOT NULL
    );
    
-- 프로필 TABLE
CREATE TABLE profile(
    M_ID VARCHAR2(30) NOT NULL,
	R_N NUMBER NOT NULL
    );
    
-- 모집방 TABLE
CREATE TABLE BOARD_RECRUIT(
    B_N NUMBER PRIMARY KEY NOT NULL,
    M_ID VARCHAR2(30) NOT NULL,
	CA_N NUMBER NOT NULL,
    B_TYPE CHAR(4) NOT NULL,
    B_TITLE VARCHAR2(500) NOT NULL,
    B_CONTENT VARCHAR2(2000) NOT NULL,
    B_START DATE NOT NULL,
    B_END DATE NOT NULL,
    B_TOTAL NUMBER NOT NULL,
    B_ATTEND NUMBER,
    B_PLACE VARCHAR2(500) NOT NULL,
    B_FEE NUMBER,
    B_MATCH CHAR(5) NOT NULL,
    B_GENDER CHAR(3) NOT NULL,
    B_AGE CHAR NOT NULL ,
    B_EQUIP CHAR(3) NOT NULL,
    B_MINPEOPLE NUMBER NOT NULL,
    B_PROGRESS VARCHAR2(2000),
    B_SHOWER CHAR(3) NOT NULL,
    B_PARKING CHAR(3) NOT NULL,
    B_RENTAL CHAR(3) NOT NULL,
    B_CLOTH CHAR(3) NOT NULL,
    B_FACILITY VARCHAR2(2000),
    B_TIMESTAMP DATE NOT NULL,
    B_VIEW NUMBER    
    );
    
-- 모임시간 TABLE
CREATE TABLE TIME(
    B_N NUMBER NOT NULL,
    DAYWEEK DATE NOT NULL,
    MEETING_TIME DATE NOT NULL
    );

-- 모집방 채팅 TABLE
CREATE TABLE CHAT(
    B_N NUMBER NOT NULL,
    M_ID VARCHAR2(30) NOT NULL,
    CHAT_TIME DATE NOT NULL,
    CHATE_MESSAGE VARCHAR2(500) NOT NULL
    );
-- 모임신청 TABLE
CREATE TABLE APPLICATION(
    M_ID VARCHAR2(30) NOT NULL,
    B_N NUMBER NOT NULL,
    AP_APPROVAL CHAR(2) NOT NULL,
    AP_TIMESTAMP DATE NOT NULL
    );
    
-- 찜 목록 TABLE
CREATE TABLE WISH(
    W_N	NUMBER NOT NULL,
	B_N	NUMBER NOT NULL,
	M_ID VARCHAR2(30) NOT NULL,
	W_SELECT CHAR NOT NULL
    );

-- 후기 TABLE
CREATE TABLE REVIEW(
    R_N NUMBER PRIMARY KEY NOT NULL,
    B_N	NUMBER NOT NULL,
	M_ID VARCHAR2(30) NOT NULL,
    GRADE CHAR(1) NOT NULL,
    R_CONTENT VARCHAR2(500),
    R_TIMESTAMP DATE NOT NULL
    );
    
-- 카테고리 TABLE
CREATE TABLE CATEGORY(
    CA_N NUMBER PRIMARY KEY NOT NULL,
    CA_EXERCISE CHAR(4) NOT NULL
    );

-- 중고마켓 TABLE
CREATE TABLE BOARD_MARKET(
    BM_N NUMBER PRIMARY KEY NOT NULL,
    M_ID VARCHAR2(30) NOT NULL,
	CA_N NUMBER NOT NULL,
    IMG_N NUMBER NOT NULL,
    C_N NUMBER NOT NULL,
    BM_TITLE VARCHAR2(500) NOT NULL,
    BM_CONTENT VARCHAR2(2000) NOT NULL,
    BM_TIMESTAMP DATE NOT NULL,
    BM_VIEW NUMBER
    );
    
-- 상품 이미지 TABLE
CREATE TABLE IMAGE(
    IMG_N NUMBER PRIMARY KEY NOT NULL,
    IMG_SCR VARCHAR2(80) NOT NULL
    );
    
-- 댓글 TABLE
CREATE TABLE MARKET_COMMENT(
    BM_N NUMBER NOT NULL,
    M_ID VARCHAR2(30) NOT NULL,    
    C_CONTENT VARCHAR2(1000) NOT NULL,
    C_TIMESTAMP DATE NOT NULL
    );
    
-- 공지사항 TABLE
CREATE TABLE BOARD_NOTICE(
    BN_N NUMBER PRIMARY KEY NOT NULL,
    M_ID VARCHAR2(30) NOT NULL,    
    BN_TITLE VARCHAR2(500) NOT NULL,
    BN_CONTENT VARCHAR2(2000) NOT NULL,
    BN_TIMESTAMP DATE NOT NULL,
    BN_VIEW NUMBER
    );
    
-- Q&A TABLE
CREATE TABLE BOARD_QUESTION(
    BQ_N NUMBER PRIMARY KEY NOT NULL,
    M_ID VARCHAR2(30) NOT NULL,
    BQ_TITLE VARCHAR2(500) NOT NULL,
    BQ_CONTENT VARCHAR2(2000) NOT NULL,
    BQ_TIMESTAMP DATE NOT NULL
    );
    
-- 신고 TABLE
CREATE TABLE REPORT(
    R_N NUMBER PRIMARY KEY NOT NULL,
    M_ID VARCHAR2(30) NOT NULL,
    R_TYPE CHAR(1) NOT NULL,
    R_TITLE VARCHAR2(500) NOT NULL,
    R_CONTENT VARCHAR2(2000) NOT NULL,
    R_TIMESTAMP DATE NOT NULL
    );
    
-- 테이블 삭제
--DROP TABLE member;
--DROP TABLE profile;
--DROP TABLE board_recruit;
--DROP TABLE time;
--DROP TABLE chat;
--DROP TABLE application;
--DROP TABLE wish;
--DROP TABLE review;
--DROP TABLE category;
--DROP TABLE board_market;
--DROP TABLE image;
--DROP TABLE MARKET_comment;
--DROP TABLE board_notice;
--DROP TABLE board_question;
--DROP TABLE report;

-- 외래키 생성
ALTER TABLE Profile ADD CONSTRAINT FK_Member_TO_Profile FOREIGN KEY (M_ID) REFERENCES Member (M_ID);
ALTER TABLE Profile ADD CONSTRAINT FK_Review_TO_Profile FOREIGN KEY (R_N) REFERENCES Review (R_N);

ALTER TABLE Board_Recruit ADD CONSTRAINT FK_Member_TO_Board_Recruit FOREIGN KEY (M_ID) REFERENCES Member (M_ID);
ALTER TABLE Board_Recruit ADD CONSTRAINT FK_Category_TO_Board_Recruit FOREIGN KEY (CA_N) REFERENCES Category (CA_N);

ALTER TABLE Market_Comment ADD CONSTRAINT FK_Board_Market_TO_Comment FOREIGN KEY (BM_N) REFERENCES Board_Market (BM_N);
ALTER TABLE Market_Comment ADD CONSTRAINT FK_Member_TO_Comment FOREIGN KEY (M_ID) REFERENCES Member (M_ID);

ALTER TABLE Chat ADD CONSTRAINT FK_Board_Recruit_TO_Chat FOREIGN KEY (B_N) REFERENCES Board_Recruit (B_N);
ALTER TABLE Chat ADD CONSTRAINT FK_Member_TO_Chat FOREIGN KEY (M_ID) REFERENCES Member (M_ID);

ALTER TABLE TIME ADD CONSTRAINT FK_Recruit_TO_TIME FOREIGN KEY (B_N) REFERENCES Board_Recruit (B_N);

ALTER TABLE Application ADD CONSTRAINT FK_Member_TO_Application FOREIGN KEY (M_ID) REFERENCES Member (M_ID);
ALTER TABLE Application ADD CONSTRAINT FK_Recruit_TO_Application FOREIGN KEY (B_N) REFERENCES Board_Recruit (B_N);

ALTER TABLE Review ADD CONSTRAINT FK_Recruit_TO_Review FOREIGN KEY (B_N) REFERENCES Board_Recruit (B_N);
ALTER TABLE Review ADD CONSTRAINT FK_Member_TO_Review FOREIGN KEY (M_ID) REFERENCES Member (M_ID);

ALTER TABLE Board_Market ADD CONSTRAINT FK_Member_TO_Board_Market FOREIGN KEY (M_ID) REFERENCES Member (M_ID);
ALTER TABLE Board_Market ADD CONSTRAINT FK_Category_TO_Board_Market FOREIGN KEY (CA_N) REFERENCES Category (CA_N);
ALTER TABLE Board_Market ADD CONSTRAINT FK_IMAGE_TO_Board_Market FOREIGN KEY (IMG_N) REFERENCES IMAGE (IMG_N);

ALTER TABLE Board_Notice ADD CONSTRAINT FK_Member_TO_Board_Notice FOREIGN KEY (M_ID) REFERENCES Member (M_ID);

ALTER TABLE Wish ADD CONSTRAINT FK_Board_Recruit_TO_Wish FOREIGN KEY (B_N) REFERENCES Board_Recruit (B_N);
ALTER TABLE Wish ADD CONSTRAINT FK_Member_TO_Wish FOREIGN KEY (M_ID) REFERENCES Member (M_ID);

ALTER TABLE Board_Question ADD CONSTRAINT FK_Member_TO_Board_Question FOREIGN KEY (M_ID) REFERENCES Member (M_ID);

ALTER TABLE Report ADD CONSTRAINT FK_Member_TO_Report FOREIGN KEY (M_ID) REFERENCES Member (M_ID);
